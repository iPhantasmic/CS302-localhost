// @ts-nocheck
import {
  Avatar,
  Box,
  Button,
  Container,
  Flex,
  HStack,
  Text,
  VStack,
  Wrap,
  WrapItem,
  Accordion,
  AccordionItem,
  AccordionPanel,
  Heading,
  AccordionIcon,
  AccordionButton,
  Badge,
} from "@chakra-ui/react";
import type { GetStaticProps, NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Router, { useRouter } from "next/router";
import { Card } from "../../components/Card";
import DarkModeToggle from "../../components/DarkModeToggle";
import Footer from "../../components/Footer";
import { Navbar } from "../../components/Navbar";
import Types from "../../components/Types";
import styles from "../styles/Home.module.css";
import { gql } from "@apollo/client";
import gqlclient from "../../GraphQL/graphQLClient";
import { useEffect, useState } from "react";
import MainContent from "../../components/MainContent";
import { useToast } from "@chakra-ui/react";
import {
  CalendarIcon,
  StarIcon,
  AttachmentIcon,
  ChatIcon,
  AtSignIcon,
} from "@chakra-ui/icons";
import axios from "axios";

const Home: NextPage = () => {
  // console.log(query_data.launches)
  const router = useRouter();
  const [dirty, setDirty] = useState(false);
  const [user, setUser] = useState({});
  const [bookings, setBookings] = useState([]);
  const toast = useToast();
  const { data: session, status } = useSession({
    required: true,
    onUnauthenticated() {
      // The user is not authenticated, handle it here.
      Router.push("/auth/signin");
    },
  });

  function handleRefund(bookingId, userId) {
    console.log(bookingId, userId);

    toast({
      title: "Processing",
      description: "Please hold while we process your refund.",
      status: "info",
      duration: 9000,
      isClosable: true,
    });

    // TODO: Swap on change PAYMENT SERVICE
    axios
      .post(
        "http://cs302-payments-1c6335cbb512fe7e.elb.ap-southeast-1.amazonaws.com:420/api/payments/refund",
        {
          bookingId: bookingId,
          userId: userId,
        }
      )
      .then((response) => {
        toast({
          title: "Success",
          description: "We have processed your refund.",
          status: "success",
          duration: 9000,
          isClosable: true,
        });
        console.log(response);
      })
      .catch((e) => {
        console.log(e);
      });
  }

  useEffect(() => {
    if (!session) {
      return;
    }
    // console.log(window.location.pathname);
    var data = { userId: session.userId };

    const userData = gqlclient.query({
      query: gql`
        query GetUser($data: GetUserRequest) {
          GetUser(data: $data) {
            userId
            email
          }
        }
      `,
      variables: { data },
    });

    userData.then((response) => {
      setUser(response.data.GetUser);
    });

    const bookingData = gqlclient.query({
      query: gql`
        query GetBookingByUser($data: GetBookingsByUserRequest) {
          GetBookingByUser(data: $data) {
            bookings {
              id
              userId
              listingId
              hostId
              status
              startDate {
                nanos
                seconds
              }
              endDate {
                nanos
                seconds
              }
            }
          }
        }
      `,
      variables: { data },
    });

    bookingData
      .then((response) => {
        // console.log(response.data.GetBookingByUser.bookings);
        setBookings(response.data.GetBookingByUser.bookings);
      })
      .catch((e) => {
        console.log(e);
      });
  }, [session, dirty]);

  return (
    <div>
      <Head>
        <title>Localhost - Rent safely</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          http-equiv="Content-Security-Policy"
          content="upgrade-insecure-requests"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar main simple />

      <MainContent>
        <Container maxW="container.3xl" height="fit-content">
          <HStack align="top" mb={20}>
            <Container ml={20} mr={0} w={300}>
              <Box mt="10" w={300} boxShadow="lg" borderRadius="xl">
                <VStack px={12}>
                  <Wrap mt={5}>
                    <WrapItem>
                      <Avatar
                        size="2xl"
                        name="Segun Adebayo"
                        src="https://bit.ly/sage-adebayo"
                      />{" "}
                    </WrapItem>
                  </Wrap>
                  <Text fontWeight="semibold" pt={2}>
                    Nicholas Lam Jye Yi @ Oo{" "}
                  </Text>
                  <Text fontSize="sm">Joined on Mar 2020</Text>
                  <Text fontSize="sm" pb={5}>
                    {session?.user.email}
                  </Text>
                  <Button fontSize="sm">Refer a friend!</Button>
                  <Box py={2}></Box>
                </VStack>
              </Box>
            </Container>
            <Container w={1000} pl={20} pt={10}>
              <Heading mb={5} fontSize="2xl">
                View Bookings
              </Heading>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <h2>
                    <AccordionButton
                      _expanded={{ bg: "blue.600", color: "white" }}
                    >
                      <Box flex="1" textAlign="left">
                        Future Bookings
                      </Box>
                      <AccordionIcon />
                    </AccordionButton>
                  </h2>
                  <AccordionPanel>
                    {bookings !== undefined
                      ? bookings.map((booking, index) => {
                          return booking.status == 1 ? (
                            <Accordion
                              allowToggle
                              w={800}
                              px={4}
                              key={booking.id}
                            >
                              <AccordionItem>
                                <h2>
                                  <AccordionButton
                                    _expanded={{
                                      bg: "blue.600",
                                      color: "white",
                                    }}
                                  >
                                    <HStack>
                                      <Text>
                                        {new Date(
                                          booking.startDate.seconds.low * 1000
                                        ).toLocaleDateString("en-US", {
                                          weekday: "long",
                                          year: "numeric",
                                          month: "long",
                                          day: "numeric",
                                        })}
                                      </Text>
                                      <Badge colorScheme="green">Active</Badge>
                                    </HStack>
                                    <AccordionIcon />
                                  </AccordionButton>
                                </h2>
                                <AccordionPanel>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit, sed do eiusmod tempor
                                  incididunt ut labore et dolore magna aliqua.
                                  Ut enim ad minim veniam, quis nostrud
                                  exercitation ullamco laboris nisi ut aliquip
                                  ex ea commodo consequat.
                                </AccordionPanel>
                              </AccordionItem>
                            </Accordion>
                          ) : (
                            <></>
                          );
                        })
                      : "Nothing here"}
                  </AccordionPanel>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <h2>
                    <AccordionButton
                      _expanded={{ bg: "blue.600", color: "white" }}
                    >
                      <Box flex="1" textAlign="left">
                        On-going Bookings
                      </Box>
                      <AccordionIcon />
                    </AccordionButton>
                  </h2>
                  <AccordionPanel>
                    {bookings !== undefined
                      ? bookings.map((booking, index) => {
                          return booking.status == 1 ? (
                            <Accordion
                              allowToggle
                              w={800}
                              px={4}
                              key={booking.id}
                            >
                              <AccordionItem>
                                <h2>
                                  <AccordionButton
                                    _expanded={{
                                      bg: "blue.600",
                                      color: "white",
                                    }}
                                  >
                                    <Box flex="1" textAlign="left">
                                      <HStack>
                                        <Text>
                                          {new Date(
                                            booking.startDate.seconds.low * 1000
                                          ).toLocaleDateString("en-US", {
                                            weekday: "long",
                                            year: "numeric",
                                            month: "long",
                                            day: "numeric",
                                          })}
                                        </Text>
                                        <Badge colorScheme="green">
                                          Active
                                        </Badge>
                                      </HStack>
                                    </Box>
                                    <AccordionIcon />
                                  </AccordionButton>
                                </h2>
                                <AccordionPanel>
                                  <Text>
                                    Lorem ipsum dolor sit amet, consectetur
                                    adipiscing elit, sed do eiusmod tempor
                                    incididunt ut labore et dolore magna aliqua.
                                    Ut enim ad minim veniam, quis nostrud
                                    exercitation ullamco laboris nisi ut aliquip
                                    ex ea commodo consequat.
                                  </Text>
                                  <Button
                                    colorScheme="red"
                                    size="md"
                                    onClick={() =>
                                      handleRefund(
                                        booking.id,
                                        session?.user.userId
                                      )
                                    }
                                  >
                                    Refund
                                  </Button>
                                </AccordionPanel>
                              </AccordionItem>
                            </Accordion>
                          ) : (
                            <></>
                          );
                        })
                      : "Nothing here"}
                  </AccordionPanel>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <h2>
                    <AccordionButton
                      _expanded={{ bg: "blue.600", color: "white" }}
                    >
                      <Box flex="1" textAlign="left">
                        Past Bookings
                      </Box>
                      <AccordionIcon />
                    </AccordionButton>
                  </h2>
                  <AccordionPanel>
                    {bookings !== undefined
                      ? bookings.map((booking, index) => {
                          return booking.status == 3 ? (
                            <Accordion
                              allowToggle
                              w={800}
                              px={4}
                              key={booking.id}
                            >
                              <AccordionItem>
                                <h2>
                                  <AccordionButton
                                    _expanded={{
                                      bg: "blue.600",
                                      color: "white",
                                    }}
                                  >
                                    <Box flex="1" textAlign="left">
                                      <HStack>
                                        <Text>
                                          {new Date(
                                            booking.startDate.seconds.low * 1000
                                          ).toLocaleDateString("en-US", {
                                            weekday: "long",
                                            year: "numeric",
                                            month: "long",
                                            day: "numeric",
                                          })}
                                        </Text>
                                        <Badge colorScheme="red">
                                          Cancelled
                                        </Badge>
                                      </HStack>
                                    </Box>
                                    <AccordionIcon />
                                  </AccordionButton>
                                </h2>
                                <AccordionPanel>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit, sed do eiusmod tempor
                                  incididunt ut labore et dolore magna aliqua.
                                  Ut enim ad minim veniam, quis nostrud
                                  exercitation ullamco laboris nisi ut aliquip
                                  ex ea commodo consequat.
                                </AccordionPanel>
                              </AccordionItem>
                            </Accordion>
                          ) : (
                            <></>
                          );
                        })
                      : "Nothing here"}
                  </AccordionPanel>
                </AccordionItem>
              </Accordion>

              <Heading mb={5} mt={10} fontSize="2xl">
                Profile Settings
              </Heading>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Account details
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Email, Password and Contact
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Account Verification
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Connect to Facebook
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Account details
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>

              <Heading mb={5} mt={10} fontSize="2xl">
                Payment Details
              </Heading>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Add Credit/Deibt Card
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
              <Accordion allowToggle w={800}>
                <AccordionItem>
                  <AccordionButton
                    _expanded={{ bg: "blue.600", color: "white" }}
                  >
                    <Box flex="1" textAlign="left">
                      Add Receiving Bank Account
                    </Box>
                    <AccordionIcon />
                  </AccordionButton>
                </AccordionItem>
              </Accordion>
            </Container>
          </HStack>
        </Container>
        <Footer />
      </MainContent>
    </div>
  );
};

// export async function getStaticProps() {
//     var datas = { userId: "c2d29867-3d0b-d497-9191-18a9d8ee7830" };

//     const { data } = await gqlclient.query({
//         query: gql`
//       query GetUser($datas: GetUserRequest) {
//         GetUser(data: $datas) {
//           userId
//           email
//         }
//       }
//     `,
//         variables: { datas },
//     });
//     try {
//         return {
//             props: {
//                 launches: data,
//             },
//         };
//     } catch (e) {
//         console.log("Error in subscription:", e);
//     }
// }

export default Home;
