// @ts-nocheck
import { Box, Container, HStack } from "@chakra-ui/react";
import type { GetStaticProps, NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Router from "next/router";
import { Card } from "../components/Card";
import DarkModeToggle from "../components/DarkModeToggle";
import Footer from "../components/Footer";
import { Navbar } from "../components/Navbar";
import Types from "../components/Types";
import styles from "../styles/Home.module.css";
import { gql } from "@apollo/client";
import gqlclient from "../GraphQL/graphQLClient";
import { useEffect, useState } from "react";
import MainContent from "../components/MainContent";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const router = useRouter();
  const [listings, setListings] = useState<any[]>([]);
  const [toggle, setToggle] = useState(false);
  const { data: session, status } = useSession({
    required: true,
    onUnauthenticated() {
      // The user is not authenticated, handle it here.
      // Router.push("/auth/signin");
    },
  });

  function sliceIntoChunks(arr, chunkSize) {
    const res = [];
    for (let i = 0; i < arr.length; i += chunkSize) {
      const chunk = arr.slice(i, i + chunkSize);
      res.push(chunk);
    }
    return res;
  }

  useEffect(() => {
    gqlclient
      .query({
        query: gql`
          query GetAllListings {
            GetAllListings {
              listings {
                listingId
                userId
                title
                price
                images
                type
                address
                country
                city
                rooms
                startDate {
                  nanos
                  seconds
                }
                createdAt {
                  nanos
                  seconds
                }
              }
            }
          }
        `,
      })
      .then((response) => {
        var list = response.data.GetAllListings.listings;
        setListings(sliceIntoChunks(list, 4));
        console.log(listings);
      })
      .catch((e) => {
        console.log(e);
      });
  }, [toggle]);

  useEffect(() => {
    console.log(router.query);
    if (router.query.country === undefined || router.query.country === "") {
      setToggle(!toggle);
      return;
    }
    console.log("Continue");
    const data = { country: router.query.country };
    gqlclient
      .query({
        query: gql`
          query ViewListings($data: ViewListingsRequest) {
            ViewListings(data: $data) {
              listings {
                listingId
                userId
                title
                price
                images
                type
                address
                country
                city
                rooms
                startDate {
                  nanos
                  seconds
                }
                createdAt {
                  nanos
                  seconds
                }
              }
            }
          }
        `,
        variables: { data },
      })
      .then((response) => {
        var list = response.data.ViewListings.listings;
        setListings(sliceIntoChunks(list, 4));
      })
      .catch((e) => {
        console.log(e);
      });
  }, [router.query]);

  return (
    <div>
      <Head>
        <title>Localhost - Rent safely</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar main />

      <MainContent>
        <Types />
        <Container maxW="container.3xl" pt={90}>
          {listings.map((group, index) => {
            console.log(group);
            return (
              <HStack key={index} placeContent="center">
                {group.map((element: { listingId: any }) => {
                  return <Card key={element.listingId} data={element} />;
                })}
              </HStack>
            );
          })}
        </Container>
      </MainContent>
      <Footer />
    </div>
  );
};

export default Home;
