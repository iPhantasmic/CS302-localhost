# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: golang:latest

# Build a Docker container and push it to Amazon ECR
variables:
  DOCKER_REGISTRY: 631945473733.dkr.ecr.ap-southeast-1.amazonaws.com
  AWS_DEFAULT_REGION: ap-southeast-1
  APP_NAME: listings
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
- lint
- test
- build

format:
  stage: lint
  script:
  - go fmt $(go list ./...)
  - go vet $(go list ./...)

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

compile:
  stage: build
  script:
  - mkdir -p auth_service
  - go build -o auth_service ./...
  artifacts:
    paths:
    - auth_service
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

sast:
  stage: test
  variables:
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, eslint, flawfinder, kubesec, nodejs-scan,
      phpcs-security-audit, pmd-apex, security-code-scan, sobelow, spotbugs
include:
- template: Security/SAST.gitlab-ci.yml

semgrep:
  stage: test
  image: returntocorp/semgrep
  # Run the "semgrep ci" command on the command line of the docker image.
  script: semgrep ci || true

  variables:
    # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable.
    SEMGREP_RULES: p/default p/golang p/r2c-security-audit # See more at semgrep.dev/explore.

publish:
  stage: build
  image: 
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID .
    - docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID