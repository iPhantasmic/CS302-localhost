# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: golang:latest

stages:
- lint
- test
- build
- analysis

format:
  stage: lint
  script:
  - go fmt $(go list ./...)
  - go vet $(go list ./...)

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

compile:
  stage: build
  script:
  - mkdir -p auth_service
  - go build -o auth_service ./...
  artifacts:
    paths:
    - auth_service
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

sast:
  stage: test
  variables:
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, eslint, flawfinder, kubesec, nodejs-scan,
      phpcs-security-audit, pmd-apex, security-code-scan, sobelow, spotbugs
include:
- template: Security/SAST.gitlab-ci.yml

semgrep:
  stage: test
  image: returntocorp/semgrep
  # Run the "semgrep ci" command on the command line of the docker image.
  script: semgrep ci || true

  variables:
    # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable.
    SEMGREP_RULES: p/default p/jwt p/golang p/r2c-security-audit # See more at semgrep.dev/explore.

sonarqube-check:
  stage: analysis
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main # or the name of your main branch